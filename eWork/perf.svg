<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="342" onload="init(evt)" viewBox="0 0 1200 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="342.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="325" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="325" > </text>
<g id="frames">
<g >
<title>__overflow (95 samples, 0.04%)</title><rect x="1106.0" y="197" width="0.5" height="15.0" fill="rgb(253,207,0)" rx="2" ry="2" />
<text  x="1108.99" y="207.5" ></text>
</g>
<g >
<title>malloc (89 samples, 0.04%)</title><rect x="1189.5" y="261" width="0.5" height="15.0" fill="rgb(228,34,31)" rx="2" ry="2" />
<text  x="1192.50" y="271.5" ></text>
</g>
<g >
<title>__mpn_extract_double (36 samples, 0.02%)</title><rect x="1105.1" y="197" width="0.2" height="15.0" fill="rgb(248,20,20)" rx="2" ry="2" />
<text  x="1108.05" y="207.5" ></text>
</g>
<g >
<title>__check_object_size (181 samples, 0.09%)</title><rect x="24.5" y="117" width="1.0" height="15.0" fill="rgb(251,159,34)" rx="2" ry="2" />
<text  x="27.53" y="127.5" ></text>
</g>
<g >
<title>tty_write_room (42 samples, 0.02%)</title><rect x="48.0" y="101" width="0.2" height="15.0" fill="rgb(220,57,36)" rx="2" ry="2" />
<text  x="50.97" y="111.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (99 samples, 0.05%)</title><rect x="32.3" y="69" width="0.6" height="15.0" fill="rgb(243,95,47)" rx="2" ry="2" />
<text  x="35.31" y="79.5" ></text>
</g>
<g >
<title>_int_free (38 samples, 0.02%)</title><rect x="54.2" y="245" width="0.2" height="15.0" fill="rgb(244,207,20)" rx="2" ry="2" />
<text  x="57.21" y="255.5" ></text>
</g>
<g >
<title>tty_buffer_space_avail (39 samples, 0.02%)</title><rect x="48.0" y="85" width="0.2" height="15.0" fill="rgb(210,68,42)" rx="2" ry="2" />
<text  x="50.99" y="95.5" ></text>
</g>
<g >
<title>common_file_perm (41 samples, 0.02%)</title><rect x="51.1" y="117" width="0.2" height="15.0" fill="rgb(243,34,48)" rx="2" ry="2" />
<text  x="54.08" y="127.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.0 (27 samples, 0.01%)</title><rect x="53.4" y="245" width="0.2" height="15.0" fill="rgb(235,130,36)" rx="2" ry="2" />
<text  x="56.41" y="255.5" ></text>
</g>
<g >
<title>_itoa_word (84 samples, 0.04%)</title><rect x="1108.1" y="213" width="0.5" height="15.0" fill="rgb(241,144,38)" rx="2" ry="2" />
<text  x="1111.12" y="223.5" ></text>
</g>
<g >
<title>__lock_text_start (18 samples, 0.01%)</title><rect x="30.6" y="101" width="0.1" height="15.0" fill="rgb(243,37,36)" rx="2" ry="2" />
<text  x="33.57" y="111.5" ></text>
</g>
<g >
<title>n_tty_write (3,824 samples, 1.81%)</title><rect x="26.8" y="117" width="21.4" height="15.0" fill="rgb(244,186,37)" rx="2" ry="2" />
<text  x="29.84" y="127.5" >n..</text>
</g>
<g >
<title>tty_paranoia_check (19 samples, 0.01%)</title><rect x="48.8" y="117" width="0.1" height="15.0" fill="rgb(237,4,26)" rx="2" ry="2" />
<text  x="51.79" y="127.5" ></text>
</g>
<g >
<title>getelement (6,834 samples, 3.24%)</title><rect x="636.2" y="213" width="38.1" height="15.0" fill="rgb(237,214,38)" rx="2" ry="2" />
<text  x="639.15" y="223.5" >get..</text>
</g>
<g >
<title>pty_write (1,267 samples, 0.60%)</title><rect x="40.2" y="101" width="7.1" height="15.0" fill="rgb(249,23,34)" rx="2" ry="2" />
<text  x="43.23" y="111.5" ></text>
</g>
<g >
<title>__virt_addr_valid (78 samples, 0.04%)</title><rect x="25.1" y="101" width="0.4" height="15.0" fill="rgb(234,173,5)" rx="2" ry="2" />
<text  x="28.11" y="111.5" ></text>
</g>
<g >
<title>__mpn_mul_1 (43 samples, 0.02%)</title><rect x="1101.9" y="181" width="0.2" height="15.0" fill="rgb(208,85,47)" rx="2" ry="2" />
<text  x="1104.85" y="191.5" ></text>
</g>
<g >
<title>__vfs_write (4,763 samples, 2.26%)</title><rect x="23.2" y="149" width="26.6" height="15.0" fill="rgb(250,39,46)" rx="2" ry="2" />
<text  x="26.23" y="159.5" >_..</text>
</g>
<g >
<title>rw_verify_area (192 samples, 0.09%)</title><rect x="50.2" y="149" width="1.1" height="15.0" fill="rgb(237,85,2)" rx="2" ry="2" />
<text  x="53.24" y="159.5" ></text>
</g>
<g >
<title>security_file_permission (130 samples, 0.06%)</title><rect x="50.6" y="133" width="0.7" height="15.0" fill="rgb(225,211,23)" rx="2" ry="2" />
<text  x="53.58" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,053 samples, 2.87%)</title><rect x="17.9" y="229" width="33.8" height="15.0" fill="rgb(218,8,22)" rx="2" ry="2" />
<text  x="20.88" y="239.5" >en..</text>
</g>
<g >
<title>rand (9,815 samples, 4.65%)</title><rect x="1108.6" y="229" width="54.8" height="15.0" fill="rgb(205,57,0)" rx="2" ry="2" />
<text  x="1111.59" y="239.5" >rand</text>
</g>
<g >
<title>add_wait_queue (74 samples, 0.04%)</title><rect x="30.8" y="101" width="0.5" height="15.0" fill="rgb(223,150,52)" rx="2" ry="2" />
<text  x="33.85" y="111.5" ></text>
</g>
<g >
<title>getlength (607 samples, 0.29%)</title><rect x="674.3" y="213" width="3.4" height="15.0" fill="rgb(254,98,8)" rx="2" ry="2" />
<text  x="677.33" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,980 samples, 2.83%)</title><rect x="18.3" y="213" width="33.4" height="15.0" fill="rgb(208,111,20)" rx="2" ry="2" />
<text  x="21.29" y="223.5" >do..</text>
</g>
<g >
<title>ldsem_down_read (45 samples, 0.02%)</title><rect x="48.5" y="101" width="0.3" height="15.0" fill="rgb(253,117,33)" rx="2" ry="2" />
<text  x="51.54" y="111.5" ></text>
</g>
<g >
<title>tty_write (4,665 samples, 2.21%)</title><rect x="23.7" y="133" width="26.1" height="15.0" fill="rgb(227,169,1)" rx="2" ry="2" />
<text  x="26.74" y="143.5" >t..</text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (64 samples, 0.03%)</title><rect x="1091.8" y="213" width="0.4" height="15.0" fill="rgb(226,127,39)" rx="2" ry="2" />
<text  x="1094.84" y="223.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (19 samples, 0.01%)</title><rect x="574.8" y="229" width="0.1" height="15.0" fill="rgb(222,12,24)" rx="2" ry="2" />
<text  x="577.78" y="239.5" ></text>
</g>
<g >
<title>__check_heap_object (37 samples, 0.02%)</title><rect x="24.9" y="101" width="0.2" height="15.0" fill="rgb(229,130,12)" rx="2" ry="2" />
<text  x="27.90" y="111.5" ></text>
</g>
<g >
<title>vfs_write (5,231 samples, 2.48%)</title><rect x="22.4" y="165" width="29.2" height="15.0" fill="rgb(236,159,26)" rx="2" ry="2" />
<text  x="25.39" y="175.5" >vf..</text>
</g>
<g >
<title>getlength (1,819 samples, 0.86%)</title><rect x="584.9" y="229" width="10.1" height="15.0" fill="rgb(223,177,21)" rx="2" ry="2" />
<text  x="587.86" y="239.5" ></text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (41 samples, 0.02%)</title><rect x="54.0" y="261" width="0.2" height="15.0" fill="rgb(226,76,9)" rx="2" ry="2" />
<text  x="56.97" y="271.5" ></text>
</g>
<g >
<title>__lock_text_start (34 samples, 0.02%)</title><rect x="47.7" y="85" width="0.2" height="15.0" fill="rgb(214,195,47)" rx="2" ry="2" />
<text  x="50.68" y="95.5" ></text>
</g>
<g >
<title>__lock_text_start (130 samples, 0.06%)</title><rect x="31.5" y="69" width="0.8" height="15.0" fill="rgb(230,82,20)" rx="2" ry="2" />
<text  x="34.54" y="79.5" ></text>
</g>
<g >
<title>_IO_file_xsputn@@GLIBC_2.2.5 (268 samples, 0.13%)</title><rect x="11.3" y="245" width="1.5" height="15.0" fill="rgb(229,138,9)" rx="2" ry="2" />
<text  x="14.27" y="255.5" ></text>
</g>
<g >
<title>new_vec (50,749 samples, 24.03%)</title><rect x="807.8" y="229" width="283.5" height="15.0" fill="rgb(231,79,48)" rx="2" ry="2" />
<text  x="810.76" y="239.5" >new_vec</text>
</g>
<g >
<title>remove_wait_queue (47 samples, 0.02%)</title><rect x="47.7" y="101" width="0.2" height="15.0" fill="rgb(230,137,42)" rx="2" ry="2" />
<text  x="50.67" y="111.5" ></text>
</g>
<g >
<title>ksys_write (5,405 samples, 2.56%)</title><rect x="21.4" y="181" width="30.2" height="15.0" fill="rgb(232,69,28)" rx="2" ry="2" />
<text  x="24.41" y="191.5" >ks..</text>
</g>
<g >
<title>__random (44,146 samples, 20.90%)</title><rect x="82.6" y="229" width="246.6" height="15.0" fill="rgb(216,165,10)" rx="2" ry="2" />
<text  x="85.55" y="239.5" >__random</text>
</g>
<g >
<title>__mpn_lshift (34 samples, 0.02%)</title><rect x="1105.3" y="197" width="0.1" height="15.0" fill="rgb(222,161,42)" rx="2" ry="2" />
<text  x="1108.25" y="207.5" ></text>
</g>
<g >
<title>__mpn_cmp (41 samples, 0.02%)</title><rect x="1102.6" y="197" width="0.2" height="15.0" fill="rgb(211,54,27)" rx="2" ry="2" />
<text  x="1105.61" y="207.5" ></text>
</g>
<g >
<title>queue_work_on (1,041 samples, 0.49%)</title><rect x="33.5" y="37" width="5.8" height="15.0" fill="rgb(245,183,29)" rx="2" ry="2" />
<text  x="36.48" y="47.5" ></text>
</g>
<g >
<title>queue_work_on (1,035 samples, 0.49%)</title><rect x="41.5" y="69" width="5.8" height="15.0" fill="rgb(249,175,33)" rx="2" ry="2" />
<text  x="44.53" y="79.5" ></text>
</g>
<g >
<title>pty_write (44 samples, 0.02%)</title><rect x="48.2" y="117" width="0.3" height="15.0" fill="rgb(222,66,42)" rx="2" ry="2" />
<text  x="51.21" y="127.5" ></text>
</g>
<g >
<title>tty_write_lock (31 samples, 0.01%)</title><rect x="48.9" y="117" width="0.2" height="15.0" fill="rgb(209,228,37)" rx="2" ry="2" />
<text  x="51.89" y="127.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (1,049 samples, 0.50%)</title><rect x="33.4" y="53" width="5.9" height="15.0" fill="rgb(224,199,41)" rx="2" ry="2" />
<text  x="36.44" y="63.5" ></text>
</g>
<g >
<title>pty_write (255 samples, 0.12%)</title><rect x="31.4" y="85" width="1.5" height="15.0" fill="rgb(223,97,19)" rx="2" ry="2" />
<text  x="34.44" y="95.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (1,051 samples, 0.50%)</title><rect x="41.4" y="85" width="5.9" height="15.0" fill="rgb(245,213,27)" rx="2" ry="2" />
<text  x="44.44" y="95.5" ></text>
</g>
<g >
<title>getelement (1,784 samples, 0.84%)</title><rect x="574.9" y="229" width="10.0" height="15.0" fill="rgb(232,100,50)" rx="2" ry="2" />
<text  x="577.90" y="239.5" ></text>
</g>
<g >
<title>tty_put_char (1,148 samples, 0.54%)</title><rect x="32.9" y="85" width="6.4" height="15.0" fill="rgb(240,162,47)" rx="2" ry="2" />
<text  x="35.89" y="95.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (79 samples, 0.04%)</title><rect x="1189.1" y="261" width="0.4" height="15.0" fill="rgb(215,120,8)" rx="2" ry="2" />
<text  x="1192.06" y="271.5" ></text>
</g>
<g >
<title>inner4 (4,693 samples, 2.22%)</title><rect x="781.4" y="229" width="26.2" height="15.0" fill="rgb(207,26,14)" rx="2" ry="2" />
<text  x="784.35" y="239.5" >i..</text>
</g>
<g >
<title>__wake_up_common_lock (82 samples, 0.04%)</title><rect x="49.2" y="85" width="0.4" height="15.0" fill="rgb(239,143,6)" rx="2" ry="2" />
<text  x="52.16" y="95.5" ></text>
</g>
<g >
<title>__mpn_divrem (396 samples, 0.19%)</title><rect x="1102.8" y="197" width="2.3" height="15.0" fill="rgb(242,151,15)" rx="2" ry="2" />
<text  x="1105.84" y="207.5" ></text>
</g>
<g >
<title>inner3 (7,534 samples, 3.57%)</title><rect x="739.3" y="229" width="42.1" height="15.0" fill="rgb(224,49,22)" rx="2" ry="2" />
<text  x="742.26" y="239.5" >inn..</text>
</g>
<g >
<title>getelement (3,899 samples, 1.85%)</title><rect x="714.0" y="213" width="21.8" height="15.0" fill="rgb(222,10,43)" rx="2" ry="2" />
<text  x="717.03" y="223.5" >g..</text>
</g>
<g >
<title>__vdso_clock_gettime (50 samples, 0.02%)</title><rect x="1189.2" y="245" width="0.3" height="15.0" fill="rgb(230,133,2)" rx="2" ry="2" />
<text  x="1192.22" y="255.5" ></text>
</g>
<g >
<title>__srandom_r (4,385 samples, 2.08%)</title><rect x="1163.6" y="261" width="24.5" height="15.0" fill="rgb(233,157,42)" rx="2" ry="2" />
<text  x="1166.62" y="271.5" >_..</text>
</g>
<g >
<title>getlength (616 samples, 0.29%)</title><rect x="735.8" y="213" width="3.5" height="15.0" fill="rgb(246,158,20)" rx="2" ry="2" />
<text  x="738.82" y="223.5" ></text>
</g>
<g >
<title>all (211,215 samples, 100%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(220,132,33)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (34 samples, 0.02%)</title><rect x="1102.4" y="197" width="0.2" height="15.0" fill="rgb(234,221,18)" rx="2" ry="2" />
<text  x="1105.40" y="207.5" ></text>
</g>
<g >
<title>ldsem_up_read (29 samples, 0.01%)</title><rect x="26.1" y="117" width="0.2" height="15.0" fill="rgb(215,1,45)" rx="2" ry="2" />
<text  x="29.10" y="127.5" ></text>
</g>
<g >
<title>[[vdso]] (44 samples, 0.02%)</title><rect x="1189.3" y="229" width="0.2" height="15.0" fill="rgb(221,9,3)" rx="2" ry="2" />
<text  x="1192.26" y="239.5" ></text>
</g>
<g >
<title>printf (3,098 samples, 1.47%)</title><rect x="1091.3" y="229" width="17.3" height="15.0" fill="rgb(217,183,32)" rx="2" ry="2" />
<text  x="1094.28" y="239.5" ></text>
</g>
<g >
<title>inner2 (11,015 samples, 5.22%)</title><rect x="677.7" y="229" width="61.6" height="15.0" fill="rgb(233,30,6)" rx="2" ry="2" />
<text  x="680.73" y="239.5" >inner2</text>
</g>
<g >
<title>_int_malloc (163 samples, 0.08%)</title><rect x="1188.2" y="261" width="0.9" height="15.0" fill="rgb(246,25,22)" rx="2" ry="2" />
<text  x="1191.15" y="271.5" ></text>
</g>
<g >
<title>up_read (26 samples, 0.01%)</title><rect x="49.7" y="117" width="0.1" height="15.0" fill="rgb(208,94,26)" rx="2" ry="2" />
<text  x="52.65" y="127.5" ></text>
</g>
<g >
<title>n_tty_write (30 samples, 0.01%)</title><rect x="23.4" y="133" width="0.2" height="15.0" fill="rgb(214,5,35)" rx="2" ry="2" />
<text  x="26.44" y="143.5" ></text>
</g>
<g >
<title>do_output_char (1,439 samples, 0.68%)</title><rect x="31.3" y="101" width="8.0" height="15.0" fill="rgb(222,53,31)" rx="2" ry="2" />
<text  x="34.26" y="111.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (72 samples, 0.03%)</title><rect x="53.6" y="261" width="0.4" height="15.0" fill="rgb(211,146,18)" rx="2" ry="2" />
<text  x="56.57" y="271.5" ></text>
</g>
<g >
<title>__fget_light (76 samples, 0.04%)</title><rect x="21.7" y="165" width="0.5" height="15.0" fill="rgb(254,207,20)" rx="2" ry="2" />
<text  x="24.75" y="175.5" ></text>
</g>
<g >
<title>__GI___strlen_sse2 (35 samples, 0.02%)</title><rect x="1102.1" y="197" width="0.2" height="15.0" fill="rgb(238,227,39)" rx="2" ry="2" />
<text  x="1105.09" y="207.5" ></text>
</g>
<g >
<title>main (198,396 samples, 93.93%)</title><rect x="55.0" y="245" width="1108.4" height="15.0" fill="rgb(229,155,49)" rx="2" ry="2" />
<text  x="58.04" y="255.5" >main</text>
</g>
<g >
<title>apparmor_file_permission (37 samples, 0.02%)</title><rect x="50.4" y="133" width="0.2" height="15.0" fill="rgb(223,132,43)" rx="2" ry="2" />
<text  x="53.38" y="143.5" ></text>
</g>
<g >
<title>__vdso_time (30 samples, 0.01%)</title><rect x="574.5" y="229" width="0.2" height="15.0" fill="rgb(241,117,48)" rx="2" ry="2" />
<text  x="577.52" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_write (6,961 samples, 3.30%)</title><rect x="12.8" y="245" width="38.9" height="15.0" fill="rgb(209,27,35)" rx="2" ry="2" />
<text  x="15.81" y="255.5" >__G..</text>
</g>
<g >
<title>common_file_perm (61 samples, 0.03%)</title><rect x="50.7" y="101" width="0.4" height="15.0" fill="rgb(208,203,11)" rx="2" ry="2" />
<text  x="53.74" y="111.5" ></text>
</g>
<g >
<title>__GI___printf_fp_l (887 samples, 0.42%)</title><rect x="1097.1" y="197" width="5.0" height="15.0" fill="rgb(221,79,29)" rx="2" ry="2" />
<text  x="1100.14" y="207.5" ></text>
</g>
<g >
<title>down_read (34 samples, 0.02%)</title><rect x="39.3" y="101" width="0.2" height="15.0" fill="rgb(233,209,4)" rx="2" ry="2" />
<text  x="42.30" y="111.5" ></text>
</g>
<g >
<title>mutex_unlock (89 samples, 0.04%)</title><rect x="26.3" y="117" width="0.5" height="15.0" fill="rgb(252,17,19)" rx="2" ry="2" />
<text  x="29.35" y="127.5" ></text>
</g>
<g >
<title>_IO_padn (30 samples, 0.01%)</title><rect x="1092.2" y="213" width="0.2" height="15.0" fill="rgb(229,70,7)" rx="2" ry="2" />
<text  x="1095.20" y="223.5" ></text>
</g>
<g >
<title>_int_free (176 samples, 0.08%)</title><rect x="52.3" y="245" width="1.0" height="15.0" fill="rgb(223,90,54)" rx="2" ry="2" />
<text  x="55.32" y="255.5" ></text>
</g>
<g >
<title>systrim.isra.0.constprop.0 (19 samples, 0.01%)</title><rect x="53.3" y="245" width="0.1" height="15.0" fill="rgb(241,173,13)" rx="2" ry="2" />
<text  x="56.31" y="255.5" ></text>
</g>
<g >
<title>__mpn_rshift (31 samples, 0.01%)</title><rect x="1105.8" y="197" width="0.2" height="15.0" fill="rgb(220,125,22)" rx="2" ry="2" />
<text  x="1108.82" y="207.5" ></text>
</g>
<g >
<title>[w75_13perf] (4,834 samples, 2.29%)</title><rect x="55.5" y="229" width="27.1" height="15.0" fill="rgb(248,26,41)" rx="2" ry="2" />
<text  x="58.55" y="239.5" >[..</text>
</g>
<g >
<title>__strchrnul_sse2 (94 samples, 0.04%)</title><rect x="1092.6" y="213" width="0.5" height="15.0" fill="rgb(210,139,24)" rx="2" ry="2" />
<text  x="1095.55" y="223.5" ></text>
</g>
<g >
<title>_IO_do_write@@GLIBC_2.2.5 (22 samples, 0.01%)</title><rect x="10.1" y="245" width="0.1" height="15.0" fill="rgb(239,50,40)" rx="2" ry="2" />
<text  x="13.06" y="255.5" ></text>
</g>
<g >
<title>ktime_get_real_seconds (25 samples, 0.01%)</title><rect x="23.3" y="133" width="0.1" height="15.0" fill="rgb(244,155,38)" rx="2" ry="2" />
<text  x="26.30" y="143.5" ></text>
</g>
<g >
<title>__mpn_mul (26 samples, 0.01%)</title><rect x="1101.7" y="181" width="0.2" height="15.0" fill="rgb(207,64,5)" rx="2" ry="2" />
<text  x="1104.71" y="191.5" ></text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (62 samples, 0.03%)</title><rect x="1096.8" y="197" width="0.3" height="15.0" fill="rgb(222,112,12)" rx="2" ry="2" />
<text  x="1099.79" y="207.5" ></text>
</g>
<g >
<title>getlength (1,148 samples, 0.54%)</title><rect x="774.9" y="213" width="6.5" height="15.0" fill="rgb(232,3,33)" rx="2" ry="2" />
<text  x="777.94" y="223.5" ></text>
</g>
<g >
<title>__libc_start_main (198,565 samples, 94.01%)</title><rect x="54.2" y="261" width="1109.3" height="15.0" fill="rgb(224,226,42)" rx="2" ry="2" />
<text  x="57.20" y="271.5" >__libc_start_main</text>
</g>
<g >
<title>tty_write_unlock (98 samples, 0.05%)</title><rect x="49.1" y="117" width="0.6" height="15.0" fill="rgb(248,180,6)" rx="2" ry="2" />
<text  x="52.11" y="127.5" ></text>
</g>
<g >
<title>__fsnotify_parent (72 samples, 0.03%)</title><rect x="22.8" y="149" width="0.4" height="15.0" fill="rgb(238,215,5)" rx="2" ry="2" />
<text  x="25.83" y="159.5" ></text>
</g>
<g >
<title>apparmor_file_permission (64 samples, 0.03%)</title><rect x="50.7" y="117" width="0.4" height="15.0" fill="rgb(211,123,39)" rx="2" ry="2" />
<text  x="53.72" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_write (5,428 samples, 2.57%)</title><rect x="21.3" y="197" width="30.3" height="15.0" fill="rgb(207,74,46)" rx="2" ry="2" />
<text  x="24.29" y="207.5" >__..</text>
</g>
<g >
<title>tty_write (39 samples, 0.02%)</title><rect x="51.4" y="149" width="0.2" height="15.0" fill="rgb(212,154,11)" rx="2" ry="2" />
<text  x="54.39" y="159.5" ></text>
</g>
<g >
<title>malloc (34 samples, 0.02%)</title><rect x="807.6" y="229" width="0.2" height="15.0" fill="rgb(212,90,42)" rx="2" ry="2" />
<text  x="810.57" y="239.5" ></text>
</g>
<g >
<title>inner1 (14,803 samples, 7.01%)</title><rect x="595.0" y="229" width="82.7" height="15.0" fill="rgb(248,140,34)" rx="2" ry="2" />
<text  x="598.03" y="239.5" >inner1</text>
</g>
<g >
<title>pty_write (1,136 samples, 0.54%)</title><rect x="33.0" y="69" width="6.3" height="15.0" fill="rgb(231,226,2)" rx="2" ry="2" />
<text  x="35.95" y="79.5" ></text>
</g>
<g >
<title>[unknown] (7,798 samples, 3.69%)</title><rect x="10.0" y="261" width="43.6" height="15.0" fill="rgb(241,29,23)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >[unk..</text>
</g>
<g >
<title>__lock_text_start (78 samples, 0.04%)</title><rect x="33.0" y="53" width="0.4" height="15.0" fill="rgb(232,209,11)" rx="2" ry="2" />
<text  x="35.99" y="63.5" ></text>
</g>
<g >
<title>fsnotify (68 samples, 0.03%)</title><rect x="49.9" y="149" width="0.3" height="15.0" fill="rgb(221,19,2)" rx="2" ry="2" />
<text  x="52.86" y="159.5" ></text>
</g>
<g >
<title>__random_r (43,893 samples, 20.78%)</title><rect x="329.2" y="229" width="245.2" height="15.0" fill="rgb(242,158,10)" rx="2" ry="2" />
<text  x="332.19" y="239.5" >__random_r</text>
</g>
<g >
<title>queue_work_on (89 samples, 0.04%)</title><rect x="32.4" y="53" width="0.5" height="15.0" fill="rgb(213,169,45)" rx="2" ry="2" />
<text  x="35.37" y="63.5" ></text>
</g>
<g >
<title>__lock_text_start (65 samples, 0.03%)</title><rect x="30.9" y="85" width="0.3" height="15.0" fill="rgb(226,118,54)" rx="2" ry="2" />
<text  x="33.87" y="95.5" ></text>
</g>
<g >
<title>__lock_text_start (166 samples, 0.08%)</title><rect x="40.5" y="85" width="0.9" height="15.0" fill="rgb(229,190,28)" rx="2" ry="2" />
<text  x="43.50" y="95.5" ></text>
</g>
<g >
<title>tty_ldisc_ref_wait (56 samples, 0.03%)</title><rect x="48.5" y="117" width="0.3" height="15.0" fill="rgb(235,87,44)" rx="2" ry="2" />
<text  x="51.48" y="127.5" ></text>
</g>
<g >
<title>__libc_alloca_cutoff (20 samples, 0.01%)</title><rect x="1102.3" y="197" width="0.1" height="15.0" fill="rgb(248,113,31)" rx="2" ry="2" />
<text  x="1105.29" y="207.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (28 samples, 0.01%)</title><rect x="25.7" y="117" width="0.2" height="15.0" fill="rgb(224,186,50)" rx="2" ry="2" />
<text  x="28.75" y="127.5" ></text>
</g>
<g >
<title>__vfprintf_internal (2,693 samples, 1.28%)</title><rect x="1093.1" y="213" width="15.0" height="15.0" fill="rgb(239,168,22)" rx="2" ry="2" />
<text  x="1096.08" y="223.5" ></text>
</g>
<g >
<title>process_echoes (36 samples, 0.02%)</title><rect x="40.0" y="101" width="0.2" height="15.0" fill="rgb(220,86,1)" rx="2" ry="2" />
<text  x="43.03" y="111.5" ></text>
</g>
<g >
<title>__mpn_mul_1 (59 samples, 0.03%)</title><rect x="1105.5" y="197" width="0.3" height="15.0" fill="rgb(237,155,39)" rx="2" ry="2" />
<text  x="1108.49" y="207.5" ></text>
</g>
<g >
<title>__mempcpy_sse2_unaligned_erms (35 samples, 0.02%)</title><rect x="52.1" y="245" width="0.2" height="15.0" fill="rgb(245,22,48)" rx="2" ry="2" />
<text  x="55.12" y="255.5" ></text>
</g>
<g >
<title>_IO_file_write@@GLIBC_2.2.5 (90 samples, 0.04%)</title><rect x="10.8" y="245" width="0.5" height="15.0" fill="rgb(238,72,21)" rx="2" ry="2" />
<text  x="13.77" y="255.5" ></text>
</g>
<g >
<title>hack_digit (286 samples, 0.14%)</title><rect x="1106.5" y="197" width="1.6" height="15.0" fill="rgb(235,113,18)" rx="2" ry="2" />
<text  x="1109.52" y="207.5" ></text>
</g>
<g >
<title>__vfprintf_internal (33 samples, 0.02%)</title><rect x="54.8" y="229" width="0.2" height="15.0" fill="rgb(238,6,33)" rx="2" ry="2" />
<text  x="57.81" y="239.5" ></text>
</g>
<g >
<title>__srandom (21 samples, 0.01%)</title><rect x="574.4" y="229" width="0.1" height="15.0" fill="rgb(242,82,20)" rx="2" ry="2" />
<text  x="577.40" y="239.5" ></text>
</g>
<g >
<title>__lock_text_start (63 samples, 0.03%)</title><rect x="49.2" y="69" width="0.4" height="15.0" fill="rgb(209,128,45)" rx="2" ry="2" />
<text  x="52.25" y="79.5" ></text>
</g>
<g >
<title>mutex_trylock (27 samples, 0.01%)</title><rect x="48.9" y="101" width="0.2" height="15.0" fill="rgb(219,108,40)" rx="2" ry="2" />
<text  x="51.92" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_write (57 samples, 0.03%)</title><rect x="17.9" y="213" width="0.3" height="15.0" fill="rgb(249,81,16)" rx="2" ry="2" />
<text  x="20.88" y="223.5" ></text>
</g>
<g >
<title>__wake_up (90 samples, 0.04%)</title><rect x="49.1" y="101" width="0.5" height="15.0" fill="rgb(239,77,10)" rx="2" ry="2" />
<text  x="52.12" y="111.5" ></text>
</g>
<g >
<title>w75_13perf (211,215 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(243,79,14)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >w75_13perf</text>
</g>
<g >
<title>fprintf (44 samples, 0.02%)</title><rect x="54.7" y="245" width="0.3" height="15.0" fill="rgb(231,143,54)" rx="2" ry="2" />
<text  x="57.75" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (58 samples, 0.03%)</title><rect x="54.4" y="245" width="0.3" height="15.0" fill="rgb(230,34,5)" rx="2" ry="2" />
<text  x="57.43" y="255.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (76 samples, 0.04%)</title><rect x="51.7" y="245" width="0.4" height="15.0" fill="rgb(245,2,9)" rx="2" ry="2" />
<text  x="54.70" y="255.5" ></text>
</g>
<g >
<title>__printf_fp (28 samples, 0.01%)</title><rect x="1092.4" y="213" width="0.2" height="15.0" fill="rgb(227,118,47)" rx="2" ry="2" />
<text  x="1095.39" y="223.5" ></text>
</g>
<g >
<title>mutex_lock (96 samples, 0.05%)</title><rect x="39.5" y="101" width="0.5" height="15.0" fill="rgb(230,19,39)" rx="2" ry="2" />
<text  x="42.49" y="111.5" ></text>
</g>
<g >
<title>_IO_file_overflow@@GLIBC_2.2.5 (106 samples, 0.05%)</title><rect x="10.2" y="245" width="0.6" height="15.0" fill="rgb(226,108,43)" rx="2" ry="2" />
<text  x="13.18" y="255.5" ></text>
</g>
<g >
<title>pty_write_room (64 samples, 0.03%)</title><rect x="47.3" y="101" width="0.4" height="15.0" fill="rgb(244,21,20)" rx="2" ry="2" />
<text  x="50.31" y="111.5" ></text>
</g>
</g>
</svg>
